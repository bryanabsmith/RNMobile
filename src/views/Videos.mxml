<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="view1_creationCompleteHandler(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" name="Home" actionBarVisible="false">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.transitions.CrossFadeViewTransition;
			
			import air.net.URLMonitor;
			
			public var crossFade:CrossFadeViewTransition = new CrossFadeViewTransition();
			
			private var urlMonitor:URLMonitor;
			
			private var url:String = "http://www.bryanabsmith.com/drnp/xmldata/resVideos.xml";
			
			[Embed(source="../res/previous.png")]
			[Bindable]
			public var imgPrevious:Class;
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				if (Capabilities.os.substring(0,2) == "iP") { // iPhone, iPad and iPod Touch padding at the top
					hGroupActionBarContents.paddingTop = 40;
				} else {
					hGroupActionBarContents.paddingTop = 0;
				}
				
				var urlRequest:URLRequest = new URLRequest("http://www.bryanabsmith.com");
				urlMonitor = new URLMonitor(urlRequest);
				urlMonitor.addEventListener(StatusEvent.STATUS, onStatusEvent);
				urlMonitor.start();
			}
			
			private function onStatusEvent(event:StatusEvent):void
			{
				var evt:StatusEvent = event;
				if (evt.code == "Service.available") {
					/*groupNetworkError.visible = false;
					groupNetworkError.includeInLayout = false;
					mainScroller.enabled = true;*/
					
					var myLoader:URLLoader = new URLLoader();
					myLoader.addEventListener(Event.COMPLETE, showHistory);
					myLoader.load(new URLRequest(url));
				} else {
					/*groupNetworkError.visible = true;
					groupNetworkError.includeInLayout = true;
					mainScroller.enabled = false;*/
				}
			}
			
			protected function showHistory(event:Event):void
			{
				var fileContents:XML = new XML(event.currentTarget.data);
				
				var count:int = 0;
				
				var pName:String = "";
				var pSource:String = "";
				var pImage:String = "";
				var pURL:String = "";
				
				for (var item:String in fileContents.vid) {
					pName = fileContents.vid.@name[item];
					pSource = fileContents.vid.@courtesySrc[item];
					pImage = fileContents.vid.@imageSrc[item];
					pURL = fileContents.vid.@fullURL[item];
					
					var groupPicturesCard:Group = new Group();
					var picturesRect:Rect = new Rect();
					var picturesStrokeColour:SolidColorStroke = new SolidColorStroke();
					var picturesFill:SolidColor = new SolidColor();
					var picturesLineColour:SolidColorStroke = new SolidColorStroke();
					var picturesLine:Line = new Line();
					//var vGroupPictures:VGroup = new VGroup();
					//var vGroupInfo:VGroup = new VGroup();
					var hGroupMain:HGroup = new HGroup();
					var vGroupInfo:VGroup = new VGroup();
					var imageOH:Image = new Image();
					var bottomSpacer:Spacer = new Spacer();
					
					var name:Label = new Label();
					var source:Label = new Label();
					
					groupPicturesCard.percentWidth = 100;
					//groupBookCard.percentHeight = 10;
					
					picturesRect.percentWidth = 100;
					picturesRect.percentHeight = 100;							
					
					picturesStrokeColour.color = 0xFFFFFF;
					picturesStrokeColour.weight = 2;
					picturesRect.stroke = picturesStrokeColour;
					
					picturesFill.color = 0xFFFFFF;
					picturesRect.fill = picturesFill;
					
					groupPicturesCard.addElement(picturesRect);
					
					picturesLine.percentWidth = 100;
					picturesLineColour.color = 0xB0B0B0;
					picturesLineColour.weight = 2;
					picturesLine.stroke = picturesLineColour;
					
					hGroupMain.percentWidth = 100;
					
					name.text = pName;
					name.percentWidth = 100;
					name.setStyle("styleName", "title");
					name.toolTip = pURL;
					name.setStyle("paddingTop", "10");
					//name.percentHeight = 100;
					name.setStyle("verticalAlign", "middle");
					name.setStyle("textAlign", "center");
					
					source.text = pSource;
					source.percentWidth = 100;
					source.setStyle("styleName", "desc");
					source.setStyle("paddingTop", "10");
					//source.percentHeight = 100;
					source.setStyle("verticalAlign", "middle");
					source.setStyle("textAlign", "center");
					
					imageOH.source = pImage;
					imageOH.width = 200;
					imageOH.height = 200;
					imageOH.toolTip = pURL;
					
					hGroupMain.addElement(imageOH);
					
					vGroupInfo.percentWidth = 100;
					
					vGroupInfo.addElement(name);
					vGroupInfo.addElement(source);
					
					hGroupMain.addElement(vGroupInfo);
					
					groupPicturesCard.addElement(hGroupMain);
					
					vGroupContent.addElement(groupPicturesCard);
					vGroupContent.addElement(picturesLine);
					
					bottomSpacer.height = 10;
					bottomSpacer.percentWidth = 100;
					
					groupPicturesCard.toolTip = pURL;
					groupPicturesCard.id = pImage;
					
					name.addEventListener(MouseEvent.CLICK, onClickOH);
					//imageOH.addEventListener(MouseEvent.CLICK, onClickOHIMG);
					
					vGroupContent.addElement(bottomSpacer);
					count++;
				}
				labelPictureCount.text = "Total number of videos: " + String(count);
				loadingRes.visible = false;
				vGroupContent.visible = true;
			}
			
			// http://stackoverflow.com/a/14762479/2363223
			protected function onClickOH(e:MouseEvent):void {
				if (e.target is Label) {
					var url:Label = e.target as Label;
					navigateToURL(new URLRequest(url.toolTip));
				}
			}
			
			// http://stackoverflow.com/a/14762479/2363223
			/*protected function onClickOHIMG(e:MouseEvent):void {
			if (e.target is Image) {
			var url:Image = e.target as Image;
			navigateToURL(new URLRequest("https://www.youtube.com/watch?v=" + url.toolTip));
			}
			}*/
		]]>
	</fx:Script>
	
	<s:VGroup id="vGroupMain" height="100%" width="100%" gap="0">
		<s:Group id="groupActionBarname" width="100%">
			<s:Rect width="100%" height="100%">
				<s:fill><s:SolidColor id="backgroundActionBarname" color="#F9F9F9"/></s:fill>
			</s:Rect>
			<s:HGroup id="hGroupActionBarContents" width="100%" verticalAlign="middle" height="100%" paddingLeft="20" paddingRight="10">
				<s:Image id="imageBack"  source="{imgPrevious}" smooth="true" smoothingQuality="high" height="{labelActionBarname.height - 30}" width="{labelActionBarname.height - 30}" click="navigator.popView(crossFade);"/>
				<s:Label id="labelActionBarname" height="100%" maxDisplayedLines="1" text="Videos" color="#167AFF" styleName="title" paddingTop="20" paddingBottom="20" click="navigator.popView(crossFade);"/>
				<s:Spacer width="100%"/>
				<s:BusyIndicator id="loadingRes" symbolColor="#167AFF"/>
			</s:HGroup>
		</s:Group>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="0xB1B1B1" weight="2"/>
			</s:stroke>
		</s:Line>
		
		<!-- http://help.adobe.com/en_US/flex/using/WS422719A4-7849-4921-AF39-57FF567B483B.html#WS063B0491-B7AB-4b00-A39F-E44310BCB0E0 -->
		<!--<s:SkinnableContainer id="backgroundContainer" height="100%" width="100%" skinClass="skins.BackPic">-->
		
		<s:VGroup id="vGroupBackground" width="100%" height="100%" gap="0">
			
			<s:Group id="groupBackground" width="100%" height="100%">
				
				<s:Rect width="100%" height="100%">
					<s:fill><s:SolidColor id="backgroundMainColour" color="#E8E8E8"/></s:fill>
				</s:Rect>
				
				<s:Scroller id="mainScroller" width="100%" height="100%">
					
					<s:VGroup id="vGroupContent" height="100%" width="100%" gap="0" paddingRight="20" paddingLeft="20" paddingTop="20" paddingBottom="20" visible="false">
						
						<s:Label id="labelPictureCount" maxDisplayedLines="1" text="" color="#000000" styleName="title" paddingBottom="20" width="100%"/>
						
					</s:VGroup>
					
				</s:Scroller>
				
			</s:Group>
			
		</s:VGroup>
		<!--</s:SkinnableContainer>-->		
	</s:VGroup>
	
</s:View>
